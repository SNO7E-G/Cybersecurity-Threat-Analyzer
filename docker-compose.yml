version: '3.8'

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6-alpine
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - 8000:8000
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
    cap_add:
      - NET_ADMIN
    network_mode: host

  celery:
    build: .
    command: celery -A cybersecurity_threat_analyzer worker -l info
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - web

  celery-beat:
    build: .
    command: celery -A cybersecurity_threat_analyzer beat -l info
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - web

  dashboard:
    build: .
    command: python manage.py run_dashboard
    volumes:
      - .:/app
    ports:
      - 8001:8001
    env_file:
      - ./.env
    depends_on:
      - web
      - db
      - redis

volumes:
  postgres_data:
  redis_data: 